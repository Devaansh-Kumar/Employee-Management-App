name: Employee CI/CD

on: push

env:
  ACTIONS_ALLOW_UNSECURE_COMMANDS: true
  ANSWER: 0
  NUM1: 0
  NUM2: 0
  TOKEN: ""
  STATUS: ""

jobs:
  build-and-upload-to-docker-hub:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: ./src
          file: ./src/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/employee-management-app:${{ github.run_number }}

  fake-deployment:
    runs-on: ubuntu-latest
    steps:
      - name: get-challenge-tokens
        run: |
          touch challenge.json && curl https://fdeployserver.up.railway.app/challenge > ./challenge.json && cat challenge.json && echo ::set-env name=TOKEN::$(jq '.token' challenge.json) && echo ::set-env name=NUM1::$(jq '.num1' challenge.json) && echo ::set-env name=NUM2::$(jq '.num2' challenge.json)
      
      - name: sum-numbers
        run: |
          echo ::set-env name=ANSWER::$(($NUM1 + $NUM2))

      - name: deploy-numbers
        run: |
          touch reponse.txt && curl -X POST https://fdeployserver.up.railway.app/deploy --header 'Content-Type:application/json' -d '{"token": $TOKEN, "answer": $ANSWER}' > ./response.txt && echo ::set-env name=STATUS::$(cat response.txt)

      - name: deploy-numbers
        run: echo "$STATUS"